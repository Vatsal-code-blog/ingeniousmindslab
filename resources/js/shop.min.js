shop_validation = {
	init: function () {
		$('#signInForm').validate({
			rules: {
				email: {
					required: true
				},
				password: {
					required: true,
					minlength: 6,
					maxlength: 20,
				}
			},
			messages: {
				email: {
					required: "Please enter email address."
				},
				password: {
					required: "Please enter password.",
					minlength: "Please enter minimum 6 characters."
				}
			},
			submitHandler: function (form) {
				var l = Ladda.create($(form).find('button').get(0));
				l.start();
				form.submit();
			}
		});
	}
};

shop_loader = {
	start: function (element) {
		element.attr('disabled', 'disabled').addClass('spinner-text').append('<div class="spinner"><span class="double-bounce1"></span><span class="double-bounce2"></span></div>');
	},
};
shop_modal = {
	confirmModal: function (url, text = '') {
		if (text == '') {
			text = 'Yes, delete it!';
		}
		Swal.fire({
			title: 'Are you sure?',
			icon: 'error',
			showCancelButton: true,
			confirmButtonText: text,
			buttonsStyling: false,
			customClass: {
				confirmButton: 'btn btn-primary btn-wh-140-50 me-2',
				cancelButton: 'btn btn-outline-danger btn-wh-140-50',
			}
		}).then((result) => {
			if (result.value) {
				window.location.href = url;
			}
		});
	},
	generalModal: function (url, type, confirm_button_text, cancel_button_text) {
		if (!confirm_button_text) { confirm_button_text = "Ok"; }
		if (!cancel_button_text) { cancel_button_text = "Cancel"; }
		Swal.fire({
			title: 'Are you sure?',
			icon: type,
			showCancelButton: true,
			confirmButtonText: confirm_button_text,
			cancelButtonText: cancel_button_text,
			buttonsStyling: false,
			customClass: {
				confirmButton: 'btn btn-primary btn-wh-140-50 me-2',
				cancelButton: 'btn btn-outline-danger btn-wh-140-50',
			}
		}).then((result) => {
			if (result.value) {
				window.location.href = url;
			}
		});
	},
	defaultModal: function (url, title) {
		$.ajax({
			url: url,
			success: function (response) {
				$('#defaultModel #modalTitle').html(title);
				$('#defaultModel .modal-body').html("");
				$('#defaultModel .modal-body').html(response);
			}
		});
		$('#defaultModel').modal('show', { backdrop: 'true' });
	},
	largeModel: function (url, title) {
		$.ajax({
			url: url,
			success: function (response) {
				$('#largeModel #modalTitle').html(title);
				$('#largeModel .modal-body').html("");
				$('#largeModel .modal-body').html(response);
				// shop_app.numericCheck();
				// floatinformINIT();
			}
		});
		$('#largeModel').modal('show', { backdrop: 'true' });
	},
	xlargeModel: function (url, title) {
		$.ajax({
			url: url,
			success: function (response) {
				$('#xlargeModel #xlmodalTitle').html(title);
				$('#xlargeModel .modal-body').html("");
				$('#xlargeModel .modal-body').html(response);
				// shop_app.numericCheck();
				// floatinformINIT();
			}
		});
		$('#xlargeModel').modal('show', { backdrop: 'true' });
	}
};
shop_app = {
	baseURL: function () {
		return $('base').attr('href');
	},
	getToken: function () {
		return $('meta[name="csrf-token"]').attr('content');
	},
	ajaxRequest: function (reqURL, reqData, reqMethod = "", reqDataType = "") {
		return axios({
			baseURL: shop_app.baseURL(),
			url: reqURL,
			method: (reqMethod != "") ? reqMethod : "post",
			headers: { 'Content-Type': (reqDataType != "") ? reqDataType : "application/x-www-form-urlencoded" },
			data: reqData,
			async: false,
		});
	},
	getckeditor: function (element, ck_config) {
		if (ck_config == "") {
			var ck_config = {
				height: '20em',
				removeButtons: 'Source,Templates,Save,NewPage,ExportPdf,Preview,Print,Cut,Undo,Redo,Copy,Paste,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,About,Maximize,BGColor,ShowBlocks,TextColor,Styles,Format,Font,FontSize,Iframe,Flash,Table,Image,HorizontalRule,Smiley,SpecialChar,PageBreak,Link,Unlink,Anchor,Language,BidiRtl,BidiLtr,JustifyLeft,Blockquote,Outdent,Indent,CreateDiv,JustifyCenter,JustifyRight,JustifyBlock,BulletedList,NumberedList,CopyFormatting,RemoveFormat,Underline,Strike,Superscript,Subscript',
				removePlugins: 'elementspath'
			};
		}
		var eleid = element.attr('id');
		if ($('#' + eleid).length) {
			CKEDITOR.replace(eleid, ck_config);
			CKEDITOR.config.allowedContent = true;
		}

	},
	notifyWithtEle: function (msg, type, pos, timeout) {
		pos = "";
		timeout = "";
		var noty = new Noty({
			theme: 'metroui',
			text: msg,
			type: type,
			layout: (pos != "") ? pos : 'topRight',
			timeout: (timeout != "") ? timeout : 3000,
			progressBar: false,
			closeWith: ['click'],
			killer: true,
		});
		noty.show();
	},
	readURL: function (input, image) {
		var fileInput = input;
		var filePath = fileInput.val();
		var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.svg)$/i;
		if (!allowedExtensions.exec(filePath)) {
			shop_app.notifyWithtEle('Only png and jpg file is allowed.', 'error');
			fileInput.val('');
		} else {
			if (input[0].files && input[0].files[0]) {
				var reader = new FileReader();
				reader.onload = function (e) {
					image.attr('src', e.target.result);
				}
				reader.readAsDataURL(input[0].files[0]);
			}
		}
	},
};
$(document).on('keydown', '.numbersOnly', function (e) {
	if ($.inArray(e.keyCode, [8, 9, 27, 13, 189, 110]) !== -1 || (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) || (e.keyCode >= 35 && e.keyCode <= 40)) {
		return;
	}
	if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
		// alert("Dont allow");
		e.preventDefault();
	}
});
$(document).on('keydown input', '.charOnly', function (e) {
	if ($.inArray(e.keyCode, [8, 9, 13, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 40, 45, 46, 32]) !== -1 || (e.ctrlKey === true || e.metaKey === true) || (e.keyCode >= 65 && e.keyCode < 93))
		return;
	else
		e.preventDefault();
});